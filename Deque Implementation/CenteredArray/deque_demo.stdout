Deque created with capacity: 5 size: 0 front: 2 back: 1
deque: F: 2 B: 1 ... { }
---- Testing some exception handling ----

---- Testing insert_back ----
F: 2 B: 2 ... {0}
F: 2 B: 3 ... {0, 1}
F: 2 B: 4 ... {0, 1, 2}
The capacity was doubled from 5 to 10
F: 4 B: 7 ... {0, 1, 2, 3}
F: 4 B: 8 ... {0, 1, 2, 3, 4}
F: 4 B: 9 ... {0, 1, 2, 3, 4, 5}
array was recentered. F: 2 B: 7 size: 6
F: 2 B: 8 ... {0, 1, 2, 3, 4, 5, 6}
F: 2 B: 9 ... {0, 1, 2, 3, 4, 5, 6, 7}
The capacity was doubled from 10 to 20
F: 6 B: 14 ... {0, 1, 2, 3, 4, 5, 6, 7, 8}
F: 6 B: 15 ... {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
F: 6 B: 16 ... {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
F: 6 B: 17 ... {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
F: 6 B: 18 ... {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
F: 6 B: 19 ... {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}
array was recentered. F: 3 B: 16 size: 14
F: 3 B: 17 ... {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}

---- Testing remove_front ----
Removing front element ...  removed 0
deque: F: 4 B: 17 ... {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
Removing front element ...  removed 1
deque: F: 5 B: 17 ... {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
Removing front element ...  removed 2
deque: F: 6 B: 17 ... {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
Removing front element ...  removed 3
deque: F: 7 B: 17 ... {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
Removing front element ...  removed 4
deque: F: 8 B: 17 ... {5, 6, 7, 8, 9, 10, 11, 12, 13, 14}
Removing front element ...  removed 5
deque: F: 9 B: 17 ... {6, 7, 8, 9, 10, 11, 12, 13, 14}
Removing front element ...  removed 6
deque: F: 10 B: 17 ... {7, 8, 9, 10, 11, 12, 13, 14}
Removing front element ...  removed 7
deque: F: 11 B: 17 ... {8, 9, 10, 11, 12, 13, 14}
Removing front element ...  removed 8
deque: F: 12 B: 17 ... {9, 10, 11, 12, 13, 14}
Removing front element ...  removed 9
deque: F: 13 B: 17 ... {10, 11, 12, 13, 14}
Removing front element ...  removed 10
deque: F: 14 B: 17 ... {11, 12, 13, 14}
Removing front element ...  removed 11
deque: F: 15 B: 17 ... {12, 13, 14}
Removing front element ...  removed 12
deque: F: 16 B: 17 ... {13, 14}
Removing front element ...  removed 13
deque: F: 17 B: 17 ... {14}
Removing front element ...  removed 14
deque: F: 18 B: 17 ... { }

creating deque1 without sending it a capacity.
Deque created with capacity: 10 size: 0 front: 5 back: 4
deque1: F: 5 B: 4 ... { }

---- Testing insert_front ____
Inserting element 0 at the front of the array ... 
F: 4 B: 4 ... {0}
Inserting element 1 at the front of the array ... 
F: 3 B: 4 ... {1, 0}
Inserting element 2 at the front of the array ... 
F: 2 B: 4 ... {2, 1, 0}
Inserting element 3 at the front of the array ... 
F: 1 B: 4 ... {3, 2, 1, 0}
Inserting element 4 at the front of the array ... 
F: 0 B: 4 ... {4, 3, 2, 1, 0}
Inserting element 5 at the front of the array ... 
array was recentered. F: 3 B: 7 size: 5
F: 2 B: 7 ... {5, 4, 3, 2, 1, 0}
Inserting element 6 at the front of the array ... 
F: 1 B: 7 ... {6, 5, 4, 3, 2, 1, 0}
Inserting element 7 at the front of the array ... 
F: 0 B: 7 ... {7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 8 at the front of the array ... 
The capacity was doubled from 10 to 20
F: 5 B: 13 ... {8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 9 at the front of the array ... 
F: 4 B: 13 ... {9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 10 at the front of the array ... 
F: 3 B: 13 ... {10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 11 at the front of the array ... 
F: 2 B: 13 ... {11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 12 at the front of the array ... 
F: 1 B: 13 ... {12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 13 at the front of the array ... 
F: 0 B: 13 ... {13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 14 at the front of the array ... 
array was recentered. F: 4 B: 17 size: 14
F: 3 B: 17 ... {14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 15 at the front of the array ... 
F: 2 B: 17 ... {15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 16 at the front of the array ... 
F: 1 B: 17 ... {16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 17 at the front of the array ... 
F: 0 B: 17 ... {17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 18 at the front of the array ... 
The capacity was doubled from 20 to 40
F: 10 B: 28 ... {18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
Inserting element 19 at the front of the array ... 
F: 9 B: 28 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
deque1: F: 9 B: 28 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}

---- Testing remove_back ----
Removing last element ...  removed 0
deque1: F: 9 B: 27 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}
Removing last element ...  removed 1
deque1: F: 9 B: 26 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}
Removing last element ...  removed 2
deque1: F: 9 B: 25 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3}
Removing last element ...  removed 3
deque1: F: 9 B: 24 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4}
Removing last element ...  removed 4
deque1: F: 9 B: 23 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5}
Removing last element ...  removed 5
deque1: F: 9 B: 22 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6}
Removing last element ...  removed 6
deque1: F: 9 B: 21 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7}
Removing last element ...  removed 7
deque1: F: 9 B: 20 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8}
Removing last element ...  removed 8
deque1: F: 9 B: 19 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9}
Removing last element ...  removed 9
deque1: F: 9 B: 18 ... {19, 18, 17, 16, 15, 14, 13, 12, 11, 10}

Checking out 'front': 19

Checking out 'back': 10
size: 10

14 is the fifth element
Setting array[2] to 6
deque1: F: 9 B: 18 ... {19, 18, 6, 16, 15, 14, 13, 12, 11, 10}

---- Testing find AND search ----
Looking for element with value 0
Element 0 not found. Find returns -1
Looking for element with value 1
Element 1 not found. Find returns -1
Looking for element with value 2
Element 2 not found. Find returns -1
Looking for element with value 3
Element 3 not found. Find returns -1
Looking for element with value 4
Element 4 not found. Find returns -1
Looking for element with value 5
Element 5 not found. Find returns -1
Looking for element with value 6
Found at index 2
Looking for element with value 7
Element 7 not found. Find returns -1
Looking for element with value 8
Element 8 not found. Find returns -1
Looking for element with value 9
Element 9 not found. Find returns -1
Looking for element with value 10
Found at index 9
Looking for element with value 11
Found at index 8
Looking for element with value 12
Found at index 7
Looking for element with value 13
Found at index 6

---- Testing sort  ----
The sorted deque1 is: 
F: 9 B: 18 ... {6, 10, 11, 12, 13, 14, 15, 16, 18, 19}
SUCCESS!
